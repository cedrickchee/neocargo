version: 2
jobs:
  build:
    working_directory: /app
    docker:
      # Here we select the Docker images we wish to use in order to build our
      # service.
      # We're using a container image made by Google, which is essentially
      # Google Cloud SDK installed and bundle with all components and
      # dependencies on top of Debian-based OS image.
      # You can find the docs and docker image here:
      # https://cloud.google.com/sdk/docs/downloads-docker
      - image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
        environment:
          GCLOUD_PROJECT_NAME: neocargo
          GCLOUD_CLUSTER_NAME: neocargo-cluster
          CLOUDSDK_COMPUTE_ZONE: asia-east2-a

          # This is a Google Cloud service account key, which allows us to authenticate
          # our build process with our cluster.
          # You need to generate a service key. You can copy the contents of this and encode it using base64.
          # Then add the base64 string into your environment variables, in the settings
          # of this build project. To find this, head over to your project in CircleCI,
          # click on the gear icon (in the top right) in your build.
          # Then click on environment variables, click add variable, with the name GCLOUD_SERVICE_KEY
          # then paste the base64 string of your service key into the value and save that.
          # Relevant docs: https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
          GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/gcloud-service-key.json

      # Then we're using the Docker image itself, so that we can build Docker containers.
      - image: docker:17.05.0-ce-git
        environment:
          DOCKER_TAG_PREFIX: "asia.gcr.io/$GCLOUD_PROJECT_NAME/neocargo-shipment-service"
          DOCKER_TAG: "$DOCKER_TAG_PREFIX:$CIRCLE_SHA1"
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies

          # Fetches the base64 encoded service key content, decodes it into a file again.
          # Then sets the gcloud project name from the environment variables we set above.
          # Then we set the cluster name, the compute region/zone, then fetch the credentials.
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ${HOME}/gcloud-service-key.json && \
              gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json && \
              gcloud config set project $GCLOUD_PROJECT_NAME && \
              gcloud --quiet config set container/cluster $GCLOUD_CLUSTER_NAME && \
              gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE} && \
              gcloud --quiet container clusters get-credentials $GCLOUD_CLUSTER_NAME
      - deploy:
          name: Push application Docker image
          command: |
            make deploy